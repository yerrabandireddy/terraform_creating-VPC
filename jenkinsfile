pipeline{
    agent any
    parameters{
        choice(name: "VPC", choices: "create\ndestroy" ,description: "creat or desroy vpc")
        string(name: "namespace", description: "Name of work space")
    }
    stages{
        stage("cloaning_repo"){
            steps{                
                 checkout([$class: 'GitSCM',                                
                 branches: [[name: "origin/master"]], 

                 userRemoteConfigs: [[url:'''https://github.com/yerrabandireddy/terraform_creating-VPC.git''']]])

            }
        
        }
        stage("TF plan"){
         when{
             expression{params.VPC == "create"}
         }
         steps{
             script{
                 sh """
                 pwd
                 ls -l
                 echo "creating a VPC"
                 terraform init
                 terraform workspace new $(params.namespace) || true
                 terraform workspace select $(params.namespace)
                 terraform plan
                 """
             }
         }
        }
        stage("TF apply"){
            when{
                expression{params.VPC == "create"}
            }
         steps{
             script{
                 sh """
                 terraform apply -input=false -auto-approve
                   """
             }
         }   
        }
        stage("TF destroy"){
            when{
                expression{
                    params.VPC == "destroy"
                }
            }
            steps{
                script{
                    sh"""
                    terraform workspace select $(params.namespace)
                    terraform destroy -auto-approve
                    """
                }
            }
        }
    }
}
